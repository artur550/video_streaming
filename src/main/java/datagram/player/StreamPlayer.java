package datagram.player;import javax.sound.sampled.*;import java.io.File;import java.io.IOException;public class StreamPlayer extends Thread implements Runnable {    private File urlIn;    public StreamPlayer(File url) {        this.urlIn = url;    }    @Override    public void run() {        try {            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(urlIn);            int bytesPerFrame = audioInputStream.getFormat().getFrameSize();            if (bytesPerFrame == AudioSystem.NOT_SPECIFIED) bytesPerFrame = 1;            AudioFormat audioFormat = audioInputStream.getFormat();            SourceDataLine sourceDataLine = AudioSystem.getSourceDataLine(audioFormat);            sourceDataLine.open(audioFormat);            sourceDataLine.start();            sourceDataLine.drain();            LineListener myListener = new LineListener() {                @Override                public void update(LineEvent event) {                }            };            sourceDataLine.addLineListener(myListener);            int numBytesRead = 0;            int numBytes = 1024 * bytesPerFrame;            int numFramesRead = 0;            byte[] audioBytes = new byte[numBytes];            while ((numBytesRead = audioInputStream.read(audioBytes)) != -1) {                if (numBytesRead == -1) break;                sourceDataLine.write(audioBytes, 0, numBytesRead);            }            sourceDataLine.stop();            sourceDataLine.close();            audioInputStream.close();        } catch (UnsupportedAudioFileException | IOException  | LineUnavailableException e) {            e.printStackTrace();        }    }}