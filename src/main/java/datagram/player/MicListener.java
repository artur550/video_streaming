package datagram.player;import javax.sound.sampled.*;import javax.sound.sampled.AudioFormat.Encoding;import java.io.*;public class MicListener {    final static private File fileOut = new File("C:\\Users\\Artur_Wojciechowski\\Desktop\\recording.au");    final static int BUFFER_SIZE=2048;    static boolean stopStream;    public MicListener(){}    public static void listen () throws Exception {        final AudioFormat audioFormat = new AudioFormat(                44100.0f, 16, 1, true, true);//                    Encoding.PCM_SIGNED, 44100, 16, 1, 2, 44100, false);        DataLine.Info info = new DataLine.Info(TargetDataLine.class, audioFormat);        final SourceDataLine sourceDataLine = AudioSystem.getSourceDataLine(audioFormat);        if(!AudioSystem.isLineSupported(info)) throw new Exception("Line is not supported");        sourceDataLine.open();        sourceDataLine.start();        final Thread thread = new Thread() {            @Override            public void run() {            try {                FileOutputStream fos = new FileOutputStream(fileOut);                InputStream bais = new ByteArrayInputStream(new byte[BUFFER_SIZE]);                AudioInputStream ais = new AudioInputStream(bais,audioFormat,BUFFER_SIZE);                byte[] data = new byte[BUFFER_SIZE];//                AudioSystem.write(ais, AudioFileFormat.Type.AU, fileOut);                int bytesRead = 0;                while (!stopStream) {                    if ((bytesRead = ais.read(data)) != -1) {                        System.out.println(bytesRead);                        fos.write(data);                        sourceDataLine.write(data, 0, bytesRead);                    }                }                fos.close();                ais.close();                bais.close();                sourceDataLine.drain();                sourceDataLine.close();            } catch (IOException e) {//| UnsupportedAudioFileException e) {                e.printStackTrace();            }            }        };        thread.start();        thread.run();        Thread.sleep(5000);        sourceDataLine.stop();        sourceDataLine.close();    }    public static void main(String[] args) throws Exception {        MicListener listener = new MicListener();        listener.listen();    }}